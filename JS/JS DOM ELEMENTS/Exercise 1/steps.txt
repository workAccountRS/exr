const headerAddbtn = document.querySelector('header button')
const addModal = document.getElementById("add-modal");

// ADD EVENT LISTENER
headerAddbtn.addEventListener('click', toogleModal)

const toogleModal = () => {
  addModal.classList.toggle('visible')
  
}

==================== Now lets add a backdrop effect

const toogleBackDrop = () => {
  backDrop.classList.toggle('visible')
}

// then from the toogleModal function call it
  toogleBackDrop()

// add a event listener
backDrop.addEventListener('click', toogleModal)

===================== ADD THE CANCEL BUTTON

const cancelbtn = addModal.querySelector('.btn--passive')

cancelbtn.addEventListener('click', cancelModalHandler)

const cancelModalHandler = () => {
  alert('Are you sure?')
  toogleModal()
}

================= ADD CONFIRM BTN

const confirmAddBtn = cancelbtn.nextElementSibling //OR ADD AN ID

confirmAddBtn.addEventListener('click', addItemHandler)

//ALSO ADD:
const userInputs = addModal.querySelectorAll('input')

=================== MODIFY


const cancelModalHandler = () => {
  if(userInputs[0].value){
  alert('Are you sure?')
  }
  toogleModal()
}


===================== ADD ITEM HANDLER


const addItemHandler = () => {
  const titleValue = userInputs[0].value
  const urlValue = userInputs[1].value
  const ratingValue = userInputs[2].value

  if(ratingValue < 1 || ratingValue > 5){
    alert('Enter Values Between 1-5')
return
  }
  
  

}

=============================== ADD A NEW ARRAY

const listItems = []

const addItemHandler = () => {
  const titleValue = userInputs[0].value
  const urlValue = userInputs[1].value
  const ratingValue = userInputs[2].value

  if(ratingValue < 1 || ratingValue > 5){
    alert('Enter Values Between 1-5')
return
  }
  
  // NEW ITEM OBJECT
  const newItem = {
    title: titleValue,
    url: urlValue,
    rating: ratingValue
  }

  listItems.push(newItem)

}

=================== ADD CLEAR INPUT

const clearInputs = () => {

  for (const userInput of userInputs){
    userInput.value = ''
  }

}


============ CALL FROM CANCEL HANDLER & ADD
 clearInputs()

=================================== UPDATE UI

const entryTextSection = document.getElementById('entry-text')

const updateList = () => {
  if(listItems.length === 0){
    entryTextSection.style.display = 'block'
  }
  else {
  entryTextSection.style.display = 'none' }
}

================= CALL FUNCTION FROM ADD

=============== RENDER ELEMENT:

const renderNewElement = (title, url, rating) => {
  const newElement = document.createElement('li') //TO BE APPENDED IN THE LIST
  newElement.classList.add('book-element')
  newElement.innerHTML = `
  <div class='book-element__image'>
  <img src=${url}>
  </div>

  <div class='book-element__info'>
  <h2> ${title} </h2>
  <p> ${rating}/5 </p>
  </div>
  `

  const listRoot = document.getElementById('book-list')
  listRoot.append(newElement)

}

================ CALL FROM ADD
  renderNewElement(newItem.title, newItem.url, newItem.rating)

=======================================DELETING A ELEMENT
let itemId = 0 //GLOBAL

// ADDED TO THE OBJECT
 id: itemId++,

// CHANGE THE FUNCTION CALL
  renderNewElement(newItem.id ,newItem.title, newItem.url, newItem.rating)

// CHANGE FUNCTION HEADER
const renderNewElement = (id, title, url, rating) => 

// CRETAE DELETE HANDLER (inside the render function)
 newElement.addEventListener('click' , deleteItemHandler.bind(this, id))
============================================

const deleteItemHandler = (id) => {

let deleteIndex = 0 // TO FIND THE INDEX

for (const item of listItems){  // LOOP THROUGH THE LIST ARRAY
  if (item.id == id) {  // IF THE CLICKED ID WAS FOUND BREAK
    break
  }
  deleteIndex++  // IF THE CLICKED ID WAS NOT FOUND MOVE TO THE NEXT ELEMENT
}

listItems.splice(deleteIndex,1) // REMOVES THE ELEMENT AT 'deleteIndex'
const listRoot = document.getElementById('book-list')  // GET THE LIST
listRoot.children[deleteIndex].remove()  // DELETE THE CHILD CORRESPONDING TO THE ARRAY ELEMENT 
updateList()
}

